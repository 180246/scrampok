// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: events.proto

package com.pokware.protobuf;

public final class Events {
  private Events() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ServerEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use ServerEvent.newBuilder() to construct.
    private ServerEvent() {
      initFields();
    }
    private ServerEvent(boolean noInit) {}
    
    private static final ServerEvent defaultInstance;
    public static ServerEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_ServerEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_ServerEvent_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      BetEvent(0, 1),
      FlopEvent(1, 3),
      RiverEvent(2, 4),
      TurnEvent(3, 5),
      DealCardsEvent(4, 6),
      HandStartEvent(5, 7),
      TimeOutEvent(6, 8),
      TableStatusEvent(7, 9),
      WinEvent(8, 10),
      SeatStatusEvent(9, 11),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 1: return BetEvent;
          case 3: return FlopEvent;
          case 4: return RiverEvent;
          case 5: return TurnEvent;
          case 6: return DealCardsEvent;
          case 7: return HandStartEvent;
          case 8: return TimeOutEvent;
          case 9: return TableStatusEvent;
          case 10: return WinEvent;
          case 11: return SeatStatusEvent;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.pokware.protobuf.Events.ServerEvent.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        BetEvent, FlopEvent, RiverEvent, TurnEvent, DealCardsEvent, HandStartEvent, TimeOutEvent, TableStatusEvent, WinEvent, SeatStatusEvent, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.pokware.protobuf.Events.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:ServerEvent.Type)
    }
    
    // required .ServerEvent.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private com.pokware.protobuf.Events.ServerEvent.Type type_;
    public boolean hasType() { return hasType; }
    public com.pokware.protobuf.Events.ServerEvent.Type getType() { return type_; }
    
    // optional .BetEvent betEvent = 2;
    public static final int BETEVENT_FIELD_NUMBER = 2;
    private boolean hasBetEvent;
    private com.pokware.protobuf.Events.BetEvent betEvent_;
    public boolean hasBetEvent() { return hasBetEvent; }
    public com.pokware.protobuf.Events.BetEvent getBetEvent() { return betEvent_; }
    
    // optional .FlopEvent flopEvent = 4;
    public static final int FLOPEVENT_FIELD_NUMBER = 4;
    private boolean hasFlopEvent;
    private com.pokware.protobuf.Events.FlopEvent flopEvent_;
    public boolean hasFlopEvent() { return hasFlopEvent; }
    public com.pokware.protobuf.Events.FlopEvent getFlopEvent() { return flopEvent_; }
    
    // optional .RiverEvent riverEvent = 5;
    public static final int RIVEREVENT_FIELD_NUMBER = 5;
    private boolean hasRiverEvent;
    private com.pokware.protobuf.Events.RiverEvent riverEvent_;
    public boolean hasRiverEvent() { return hasRiverEvent; }
    public com.pokware.protobuf.Events.RiverEvent getRiverEvent() { return riverEvent_; }
    
    // optional .TurnEvent turnEvent = 6;
    public static final int TURNEVENT_FIELD_NUMBER = 6;
    private boolean hasTurnEvent;
    private com.pokware.protobuf.Events.TurnEvent turnEvent_;
    public boolean hasTurnEvent() { return hasTurnEvent; }
    public com.pokware.protobuf.Events.TurnEvent getTurnEvent() { return turnEvent_; }
    
    // optional .DealCardsEvent dealCardsEvent = 7;
    public static final int DEALCARDSEVENT_FIELD_NUMBER = 7;
    private boolean hasDealCardsEvent;
    private com.pokware.protobuf.Events.DealCardsEvent dealCardsEvent_;
    public boolean hasDealCardsEvent() { return hasDealCardsEvent; }
    public com.pokware.protobuf.Events.DealCardsEvent getDealCardsEvent() { return dealCardsEvent_; }
    
    // optional .HandStartEvent handStartEvent = 8;
    public static final int HANDSTARTEVENT_FIELD_NUMBER = 8;
    private boolean hasHandStartEvent;
    private com.pokware.protobuf.Events.HandStartEvent handStartEvent_;
    public boolean hasHandStartEvent() { return hasHandStartEvent; }
    public com.pokware.protobuf.Events.HandStartEvent getHandStartEvent() { return handStartEvent_; }
    
    // optional .TimeOutEvent timeOutEvent = 9;
    public static final int TIMEOUTEVENT_FIELD_NUMBER = 9;
    private boolean hasTimeOutEvent;
    private com.pokware.protobuf.Events.TimeOutEvent timeOutEvent_;
    public boolean hasTimeOutEvent() { return hasTimeOutEvent; }
    public com.pokware.protobuf.Events.TimeOutEvent getTimeOutEvent() { return timeOutEvent_; }
    
    // optional .TableStatusEvent tableStatusEvent = 10;
    public static final int TABLESTATUSEVENT_FIELD_NUMBER = 10;
    private boolean hasTableStatusEvent;
    private com.pokware.protobuf.Events.TableStatusEvent tableStatusEvent_;
    public boolean hasTableStatusEvent() { return hasTableStatusEvent; }
    public com.pokware.protobuf.Events.TableStatusEvent getTableStatusEvent() { return tableStatusEvent_; }
    
    // optional .WinEvent winEvent = 11;
    public static final int WINEVENT_FIELD_NUMBER = 11;
    private boolean hasWinEvent;
    private com.pokware.protobuf.Events.WinEvent winEvent_;
    public boolean hasWinEvent() { return hasWinEvent; }
    public com.pokware.protobuf.Events.WinEvent getWinEvent() { return winEvent_; }
    
    // optional .SeatStatusEvent seatStatusEvent = 12;
    public static final int SEATSTATUSEVENT_FIELD_NUMBER = 12;
    private boolean hasSeatStatusEvent;
    private com.pokware.protobuf.Events.SeatStatusEvent seatStatusEvent_;
    public boolean hasSeatStatusEvent() { return hasSeatStatusEvent; }
    public com.pokware.protobuf.Events.SeatStatusEvent getSeatStatusEvent() { return seatStatusEvent_; }
    
    private void initFields() {
      type_ = com.pokware.protobuf.Events.ServerEvent.Type.BetEvent;
      betEvent_ = com.pokware.protobuf.Events.BetEvent.getDefaultInstance();
      flopEvent_ = com.pokware.protobuf.Events.FlopEvent.getDefaultInstance();
      riverEvent_ = com.pokware.protobuf.Events.RiverEvent.getDefaultInstance();
      turnEvent_ = com.pokware.protobuf.Events.TurnEvent.getDefaultInstance();
      dealCardsEvent_ = com.pokware.protobuf.Events.DealCardsEvent.getDefaultInstance();
      handStartEvent_ = com.pokware.protobuf.Events.HandStartEvent.getDefaultInstance();
      timeOutEvent_ = com.pokware.protobuf.Events.TimeOutEvent.getDefaultInstance();
      tableStatusEvent_ = com.pokware.protobuf.Events.TableStatusEvent.getDefaultInstance();
      winEvent_ = com.pokware.protobuf.Events.WinEvent.getDefaultInstance();
      seatStatusEvent_ = com.pokware.protobuf.Events.SeatStatusEvent.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (hasBetEvent()) {
        if (!getBetEvent().isInitialized()) return false;
      }
      if (hasFlopEvent()) {
        if (!getFlopEvent().isInitialized()) return false;
      }
      if (hasRiverEvent()) {
        if (!getRiverEvent().isInitialized()) return false;
      }
      if (hasTurnEvent()) {
        if (!getTurnEvent().isInitialized()) return false;
      }
      if (hasDealCardsEvent()) {
        if (!getDealCardsEvent().isInitialized()) return false;
      }
      if (hasHandStartEvent()) {
        if (!getHandStartEvent().isInitialized()) return false;
      }
      if (hasTimeOutEvent()) {
        if (!getTimeOutEvent().isInitialized()) return false;
      }
      if (hasTableStatusEvent()) {
        if (!getTableStatusEvent().isInitialized()) return false;
      }
      if (hasWinEvent()) {
        if (!getWinEvent().isInitialized()) return false;
      }
      if (hasSeatStatusEvent()) {
        if (!getSeatStatusEvent().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasBetEvent()) {
        output.writeMessage(2, getBetEvent());
      }
      if (hasFlopEvent()) {
        output.writeMessage(4, getFlopEvent());
      }
      if (hasRiverEvent()) {
        output.writeMessage(5, getRiverEvent());
      }
      if (hasTurnEvent()) {
        output.writeMessage(6, getTurnEvent());
      }
      if (hasDealCardsEvent()) {
        output.writeMessage(7, getDealCardsEvent());
      }
      if (hasHandStartEvent()) {
        output.writeMessage(8, getHandStartEvent());
      }
      if (hasTimeOutEvent()) {
        output.writeMessage(9, getTimeOutEvent());
      }
      if (hasTableStatusEvent()) {
        output.writeMessage(10, getTableStatusEvent());
      }
      if (hasWinEvent()) {
        output.writeMessage(11, getWinEvent());
      }
      if (hasSeatStatusEvent()) {
        output.writeMessage(12, getSeatStatusEvent());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasBetEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBetEvent());
      }
      if (hasFlopEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFlopEvent());
      }
      if (hasRiverEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRiverEvent());
      }
      if (hasTurnEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTurnEvent());
      }
      if (hasDealCardsEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getDealCardsEvent());
      }
      if (hasHandStartEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getHandStartEvent());
      }
      if (hasTimeOutEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTimeOutEvent());
      }
      if (hasTableStatusEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTableStatusEvent());
      }
      if (hasWinEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getWinEvent());
      }
      if (hasSeatStatusEvent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getSeatStatusEvent());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.ServerEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.ServerEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.ServerEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.ServerEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.ServerEvent result;
      
      // Construct using com.pokware.protobuf.Events.ServerEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.ServerEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.ServerEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.ServerEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.ServerEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.ServerEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.ServerEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.ServerEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.ServerEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.ServerEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.ServerEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.ServerEvent) {
          return mergeFrom((com.pokware.protobuf.Events.ServerEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.ServerEvent other) {
        if (other == com.pokware.protobuf.Events.ServerEvent.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBetEvent()) {
          mergeBetEvent(other.getBetEvent());
        }
        if (other.hasFlopEvent()) {
          mergeFlopEvent(other.getFlopEvent());
        }
        if (other.hasRiverEvent()) {
          mergeRiverEvent(other.getRiverEvent());
        }
        if (other.hasTurnEvent()) {
          mergeTurnEvent(other.getTurnEvent());
        }
        if (other.hasDealCardsEvent()) {
          mergeDealCardsEvent(other.getDealCardsEvent());
        }
        if (other.hasHandStartEvent()) {
          mergeHandStartEvent(other.getHandStartEvent());
        }
        if (other.hasTimeOutEvent()) {
          mergeTimeOutEvent(other.getTimeOutEvent());
        }
        if (other.hasTableStatusEvent()) {
          mergeTableStatusEvent(other.getTableStatusEvent());
        }
        if (other.hasWinEvent()) {
          mergeWinEvent(other.getWinEvent());
        }
        if (other.hasSeatStatusEvent()) {
          mergeSeatStatusEvent(other.getSeatStatusEvent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.pokware.protobuf.Events.ServerEvent.Type value = com.pokware.protobuf.Events.ServerEvent.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 18: {
              com.pokware.protobuf.Events.BetEvent.Builder subBuilder = com.pokware.protobuf.Events.BetEvent.newBuilder();
              if (hasBetEvent()) {
                subBuilder.mergeFrom(getBetEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBetEvent(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.pokware.protobuf.Events.FlopEvent.Builder subBuilder = com.pokware.protobuf.Events.FlopEvent.newBuilder();
              if (hasFlopEvent()) {
                subBuilder.mergeFrom(getFlopEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFlopEvent(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.pokware.protobuf.Events.RiverEvent.Builder subBuilder = com.pokware.protobuf.Events.RiverEvent.newBuilder();
              if (hasRiverEvent()) {
                subBuilder.mergeFrom(getRiverEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRiverEvent(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.pokware.protobuf.Events.TurnEvent.Builder subBuilder = com.pokware.protobuf.Events.TurnEvent.newBuilder();
              if (hasTurnEvent()) {
                subBuilder.mergeFrom(getTurnEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTurnEvent(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.pokware.protobuf.Events.DealCardsEvent.Builder subBuilder = com.pokware.protobuf.Events.DealCardsEvent.newBuilder();
              if (hasDealCardsEvent()) {
                subBuilder.mergeFrom(getDealCardsEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDealCardsEvent(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.pokware.protobuf.Events.HandStartEvent.Builder subBuilder = com.pokware.protobuf.Events.HandStartEvent.newBuilder();
              if (hasHandStartEvent()) {
                subBuilder.mergeFrom(getHandStartEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHandStartEvent(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.pokware.protobuf.Events.TimeOutEvent.Builder subBuilder = com.pokware.protobuf.Events.TimeOutEvent.newBuilder();
              if (hasTimeOutEvent()) {
                subBuilder.mergeFrom(getTimeOutEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTimeOutEvent(subBuilder.buildPartial());
              break;
            }
            case 82: {
              com.pokware.protobuf.Events.TableStatusEvent.Builder subBuilder = com.pokware.protobuf.Events.TableStatusEvent.newBuilder();
              if (hasTableStatusEvent()) {
                subBuilder.mergeFrom(getTableStatusEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTableStatusEvent(subBuilder.buildPartial());
              break;
            }
            case 90: {
              com.pokware.protobuf.Events.WinEvent.Builder subBuilder = com.pokware.protobuf.Events.WinEvent.newBuilder();
              if (hasWinEvent()) {
                subBuilder.mergeFrom(getWinEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWinEvent(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.pokware.protobuf.Events.SeatStatusEvent.Builder subBuilder = com.pokware.protobuf.Events.SeatStatusEvent.newBuilder();
              if (hasSeatStatusEvent()) {
                subBuilder.mergeFrom(getSeatStatusEvent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSeatStatusEvent(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .ServerEvent.Type type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public com.pokware.protobuf.Events.ServerEvent.Type getType() {
        return result.getType();
      }
      public Builder setType(com.pokware.protobuf.Events.ServerEvent.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.pokware.protobuf.Events.ServerEvent.Type.BetEvent;
        return this;
      }
      
      // optional .BetEvent betEvent = 2;
      public boolean hasBetEvent() {
        return result.hasBetEvent();
      }
      public com.pokware.protobuf.Events.BetEvent getBetEvent() {
        return result.getBetEvent();
      }
      public Builder setBetEvent(com.pokware.protobuf.Events.BetEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBetEvent = true;
        result.betEvent_ = value;
        return this;
      }
      public Builder setBetEvent(com.pokware.protobuf.Events.BetEvent.Builder builderForValue) {
        result.hasBetEvent = true;
        result.betEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeBetEvent(com.pokware.protobuf.Events.BetEvent value) {
        if (result.hasBetEvent() &&
            result.betEvent_ != com.pokware.protobuf.Events.BetEvent.getDefaultInstance()) {
          result.betEvent_ =
            com.pokware.protobuf.Events.BetEvent.newBuilder(result.betEvent_).mergeFrom(value).buildPartial();
        } else {
          result.betEvent_ = value;
        }
        result.hasBetEvent = true;
        return this;
      }
      public Builder clearBetEvent() {
        result.hasBetEvent = false;
        result.betEvent_ = com.pokware.protobuf.Events.BetEvent.getDefaultInstance();
        return this;
      }
      
      // optional .FlopEvent flopEvent = 4;
      public boolean hasFlopEvent() {
        return result.hasFlopEvent();
      }
      public com.pokware.protobuf.Events.FlopEvent getFlopEvent() {
        return result.getFlopEvent();
      }
      public Builder setFlopEvent(com.pokware.protobuf.Events.FlopEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFlopEvent = true;
        result.flopEvent_ = value;
        return this;
      }
      public Builder setFlopEvent(com.pokware.protobuf.Events.FlopEvent.Builder builderForValue) {
        result.hasFlopEvent = true;
        result.flopEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeFlopEvent(com.pokware.protobuf.Events.FlopEvent value) {
        if (result.hasFlopEvent() &&
            result.flopEvent_ != com.pokware.protobuf.Events.FlopEvent.getDefaultInstance()) {
          result.flopEvent_ =
            com.pokware.protobuf.Events.FlopEvent.newBuilder(result.flopEvent_).mergeFrom(value).buildPartial();
        } else {
          result.flopEvent_ = value;
        }
        result.hasFlopEvent = true;
        return this;
      }
      public Builder clearFlopEvent() {
        result.hasFlopEvent = false;
        result.flopEvent_ = com.pokware.protobuf.Events.FlopEvent.getDefaultInstance();
        return this;
      }
      
      // optional .RiverEvent riverEvent = 5;
      public boolean hasRiverEvent() {
        return result.hasRiverEvent();
      }
      public com.pokware.protobuf.Events.RiverEvent getRiverEvent() {
        return result.getRiverEvent();
      }
      public Builder setRiverEvent(com.pokware.protobuf.Events.RiverEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRiverEvent = true;
        result.riverEvent_ = value;
        return this;
      }
      public Builder setRiverEvent(com.pokware.protobuf.Events.RiverEvent.Builder builderForValue) {
        result.hasRiverEvent = true;
        result.riverEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeRiverEvent(com.pokware.protobuf.Events.RiverEvent value) {
        if (result.hasRiverEvent() &&
            result.riverEvent_ != com.pokware.protobuf.Events.RiverEvent.getDefaultInstance()) {
          result.riverEvent_ =
            com.pokware.protobuf.Events.RiverEvent.newBuilder(result.riverEvent_).mergeFrom(value).buildPartial();
        } else {
          result.riverEvent_ = value;
        }
        result.hasRiverEvent = true;
        return this;
      }
      public Builder clearRiverEvent() {
        result.hasRiverEvent = false;
        result.riverEvent_ = com.pokware.protobuf.Events.RiverEvent.getDefaultInstance();
        return this;
      }
      
      // optional .TurnEvent turnEvent = 6;
      public boolean hasTurnEvent() {
        return result.hasTurnEvent();
      }
      public com.pokware.protobuf.Events.TurnEvent getTurnEvent() {
        return result.getTurnEvent();
      }
      public Builder setTurnEvent(com.pokware.protobuf.Events.TurnEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTurnEvent = true;
        result.turnEvent_ = value;
        return this;
      }
      public Builder setTurnEvent(com.pokware.protobuf.Events.TurnEvent.Builder builderForValue) {
        result.hasTurnEvent = true;
        result.turnEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeTurnEvent(com.pokware.protobuf.Events.TurnEvent value) {
        if (result.hasTurnEvent() &&
            result.turnEvent_ != com.pokware.protobuf.Events.TurnEvent.getDefaultInstance()) {
          result.turnEvent_ =
            com.pokware.protobuf.Events.TurnEvent.newBuilder(result.turnEvent_).mergeFrom(value).buildPartial();
        } else {
          result.turnEvent_ = value;
        }
        result.hasTurnEvent = true;
        return this;
      }
      public Builder clearTurnEvent() {
        result.hasTurnEvent = false;
        result.turnEvent_ = com.pokware.protobuf.Events.TurnEvent.getDefaultInstance();
        return this;
      }
      
      // optional .DealCardsEvent dealCardsEvent = 7;
      public boolean hasDealCardsEvent() {
        return result.hasDealCardsEvent();
      }
      public com.pokware.protobuf.Events.DealCardsEvent getDealCardsEvent() {
        return result.getDealCardsEvent();
      }
      public Builder setDealCardsEvent(com.pokware.protobuf.Events.DealCardsEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDealCardsEvent = true;
        result.dealCardsEvent_ = value;
        return this;
      }
      public Builder setDealCardsEvent(com.pokware.protobuf.Events.DealCardsEvent.Builder builderForValue) {
        result.hasDealCardsEvent = true;
        result.dealCardsEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeDealCardsEvent(com.pokware.protobuf.Events.DealCardsEvent value) {
        if (result.hasDealCardsEvent() &&
            result.dealCardsEvent_ != com.pokware.protobuf.Events.DealCardsEvent.getDefaultInstance()) {
          result.dealCardsEvent_ =
            com.pokware.protobuf.Events.DealCardsEvent.newBuilder(result.dealCardsEvent_).mergeFrom(value).buildPartial();
        } else {
          result.dealCardsEvent_ = value;
        }
        result.hasDealCardsEvent = true;
        return this;
      }
      public Builder clearDealCardsEvent() {
        result.hasDealCardsEvent = false;
        result.dealCardsEvent_ = com.pokware.protobuf.Events.DealCardsEvent.getDefaultInstance();
        return this;
      }
      
      // optional .HandStartEvent handStartEvent = 8;
      public boolean hasHandStartEvent() {
        return result.hasHandStartEvent();
      }
      public com.pokware.protobuf.Events.HandStartEvent getHandStartEvent() {
        return result.getHandStartEvent();
      }
      public Builder setHandStartEvent(com.pokware.protobuf.Events.HandStartEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHandStartEvent = true;
        result.handStartEvent_ = value;
        return this;
      }
      public Builder setHandStartEvent(com.pokware.protobuf.Events.HandStartEvent.Builder builderForValue) {
        result.hasHandStartEvent = true;
        result.handStartEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeHandStartEvent(com.pokware.protobuf.Events.HandStartEvent value) {
        if (result.hasHandStartEvent() &&
            result.handStartEvent_ != com.pokware.protobuf.Events.HandStartEvent.getDefaultInstance()) {
          result.handStartEvent_ =
            com.pokware.protobuf.Events.HandStartEvent.newBuilder(result.handStartEvent_).mergeFrom(value).buildPartial();
        } else {
          result.handStartEvent_ = value;
        }
        result.hasHandStartEvent = true;
        return this;
      }
      public Builder clearHandStartEvent() {
        result.hasHandStartEvent = false;
        result.handStartEvent_ = com.pokware.protobuf.Events.HandStartEvent.getDefaultInstance();
        return this;
      }
      
      // optional .TimeOutEvent timeOutEvent = 9;
      public boolean hasTimeOutEvent() {
        return result.hasTimeOutEvent();
      }
      public com.pokware.protobuf.Events.TimeOutEvent getTimeOutEvent() {
        return result.getTimeOutEvent();
      }
      public Builder setTimeOutEvent(com.pokware.protobuf.Events.TimeOutEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTimeOutEvent = true;
        result.timeOutEvent_ = value;
        return this;
      }
      public Builder setTimeOutEvent(com.pokware.protobuf.Events.TimeOutEvent.Builder builderForValue) {
        result.hasTimeOutEvent = true;
        result.timeOutEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeTimeOutEvent(com.pokware.protobuf.Events.TimeOutEvent value) {
        if (result.hasTimeOutEvent() &&
            result.timeOutEvent_ != com.pokware.protobuf.Events.TimeOutEvent.getDefaultInstance()) {
          result.timeOutEvent_ =
            com.pokware.protobuf.Events.TimeOutEvent.newBuilder(result.timeOutEvent_).mergeFrom(value).buildPartial();
        } else {
          result.timeOutEvent_ = value;
        }
        result.hasTimeOutEvent = true;
        return this;
      }
      public Builder clearTimeOutEvent() {
        result.hasTimeOutEvent = false;
        result.timeOutEvent_ = com.pokware.protobuf.Events.TimeOutEvent.getDefaultInstance();
        return this;
      }
      
      // optional .TableStatusEvent tableStatusEvent = 10;
      public boolean hasTableStatusEvent() {
        return result.hasTableStatusEvent();
      }
      public com.pokware.protobuf.Events.TableStatusEvent getTableStatusEvent() {
        return result.getTableStatusEvent();
      }
      public Builder setTableStatusEvent(com.pokware.protobuf.Events.TableStatusEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTableStatusEvent = true;
        result.tableStatusEvent_ = value;
        return this;
      }
      public Builder setTableStatusEvent(com.pokware.protobuf.Events.TableStatusEvent.Builder builderForValue) {
        result.hasTableStatusEvent = true;
        result.tableStatusEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeTableStatusEvent(com.pokware.protobuf.Events.TableStatusEvent value) {
        if (result.hasTableStatusEvent() &&
            result.tableStatusEvent_ != com.pokware.protobuf.Events.TableStatusEvent.getDefaultInstance()) {
          result.tableStatusEvent_ =
            com.pokware.protobuf.Events.TableStatusEvent.newBuilder(result.tableStatusEvent_).mergeFrom(value).buildPartial();
        } else {
          result.tableStatusEvent_ = value;
        }
        result.hasTableStatusEvent = true;
        return this;
      }
      public Builder clearTableStatusEvent() {
        result.hasTableStatusEvent = false;
        result.tableStatusEvent_ = com.pokware.protobuf.Events.TableStatusEvent.getDefaultInstance();
        return this;
      }
      
      // optional .WinEvent winEvent = 11;
      public boolean hasWinEvent() {
        return result.hasWinEvent();
      }
      public com.pokware.protobuf.Events.WinEvent getWinEvent() {
        return result.getWinEvent();
      }
      public Builder setWinEvent(com.pokware.protobuf.Events.WinEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasWinEvent = true;
        result.winEvent_ = value;
        return this;
      }
      public Builder setWinEvent(com.pokware.protobuf.Events.WinEvent.Builder builderForValue) {
        result.hasWinEvent = true;
        result.winEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeWinEvent(com.pokware.protobuf.Events.WinEvent value) {
        if (result.hasWinEvent() &&
            result.winEvent_ != com.pokware.protobuf.Events.WinEvent.getDefaultInstance()) {
          result.winEvent_ =
            com.pokware.protobuf.Events.WinEvent.newBuilder(result.winEvent_).mergeFrom(value).buildPartial();
        } else {
          result.winEvent_ = value;
        }
        result.hasWinEvent = true;
        return this;
      }
      public Builder clearWinEvent() {
        result.hasWinEvent = false;
        result.winEvent_ = com.pokware.protobuf.Events.WinEvent.getDefaultInstance();
        return this;
      }
      
      // optional .SeatStatusEvent seatStatusEvent = 12;
      public boolean hasSeatStatusEvent() {
        return result.hasSeatStatusEvent();
      }
      public com.pokware.protobuf.Events.SeatStatusEvent getSeatStatusEvent() {
        return result.getSeatStatusEvent();
      }
      public Builder setSeatStatusEvent(com.pokware.protobuf.Events.SeatStatusEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSeatStatusEvent = true;
        result.seatStatusEvent_ = value;
        return this;
      }
      public Builder setSeatStatusEvent(com.pokware.protobuf.Events.SeatStatusEvent.Builder builderForValue) {
        result.hasSeatStatusEvent = true;
        result.seatStatusEvent_ = builderForValue.build();
        return this;
      }
      public Builder mergeSeatStatusEvent(com.pokware.protobuf.Events.SeatStatusEvent value) {
        if (result.hasSeatStatusEvent() &&
            result.seatStatusEvent_ != com.pokware.protobuf.Events.SeatStatusEvent.getDefaultInstance()) {
          result.seatStatusEvent_ =
            com.pokware.protobuf.Events.SeatStatusEvent.newBuilder(result.seatStatusEvent_).mergeFrom(value).buildPartial();
        } else {
          result.seatStatusEvent_ = value;
        }
        result.hasSeatStatusEvent = true;
        return this;
      }
      public Builder clearSeatStatusEvent() {
        result.hasSeatStatusEvent = false;
        result.seatStatusEvent_ = com.pokware.protobuf.Events.SeatStatusEvent.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ServerEvent)
    }
    
    static {
      defaultInstance = new ServerEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ServerEvent)
  }
  
  public static final class BetEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use BetEvent.newBuilder() to construct.
    private BetEvent() {
      initFields();
    }
    private BetEvent(boolean noInit) {}
    
    private static final BetEvent defaultInstance;
    public static BetEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public BetEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_BetEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_BetEvent_fieldAccessorTable;
    }
    
    // required int64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private boolean hasPlayerId;
    private long playerId_ = 0L;
    public boolean hasPlayerId() { return hasPlayerId; }
    public long getPlayerId() { return playerId_; }
    
    // required int64 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    // required int32 chipsAmount = 3;
    public static final int CHIPSAMOUNT_FIELD_NUMBER = 3;
    private boolean hasChipsAmount;
    private int chipsAmount_ = 0;
    public boolean hasChipsAmount() { return hasChipsAmount; }
    public int getChipsAmount() { return chipsAmount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasPlayerId) return false;
      if (!hasGameId) return false;
      if (!hasChipsAmount) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPlayerId()) {
        output.writeInt64(1, getPlayerId());
      }
      if (hasGameId()) {
        output.writeInt64(2, getGameId());
      }
      if (hasChipsAmount()) {
        output.writeInt32(3, getChipsAmount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPlayerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getPlayerId());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getGameId());
      }
      if (hasChipsAmount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getChipsAmount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.BetEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.BetEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.BetEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.BetEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.BetEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.BetEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.BetEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.BetEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.BetEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.BetEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.BetEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.BetEvent result;
      
      // Construct using com.pokware.protobuf.Events.BetEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.BetEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.BetEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.BetEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.BetEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.BetEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.BetEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.BetEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.BetEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.BetEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.BetEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.BetEvent) {
          return mergeFrom((com.pokware.protobuf.Events.BetEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.BetEvent other) {
        if (other == com.pokware.protobuf.Events.BetEvent.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasChipsAmount()) {
          setChipsAmount(other.getChipsAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPlayerId(input.readInt64());
              break;
            }
            case 16: {
              setGameId(input.readInt64());
              break;
            }
            case 24: {
              setChipsAmount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int64 playerId = 1;
      public boolean hasPlayerId() {
        return result.hasPlayerId();
      }
      public long getPlayerId() {
        return result.getPlayerId();
      }
      public Builder setPlayerId(long value) {
        result.hasPlayerId = true;
        result.playerId_ = value;
        return this;
      }
      public Builder clearPlayerId() {
        result.hasPlayerId = false;
        result.playerId_ = 0L;
        return this;
      }
      
      // required int64 gameId = 2;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // required int32 chipsAmount = 3;
      public boolean hasChipsAmount() {
        return result.hasChipsAmount();
      }
      public int getChipsAmount() {
        return result.getChipsAmount();
      }
      public Builder setChipsAmount(int value) {
        result.hasChipsAmount = true;
        result.chipsAmount_ = value;
        return this;
      }
      public Builder clearChipsAmount() {
        result.hasChipsAmount = false;
        result.chipsAmount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:BetEvent)
    }
    
    static {
      defaultInstance = new BetEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:BetEvent)
  }
  
  public static final class WinEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use WinEvent.newBuilder() to construct.
    private WinEvent() {
      initFields();
    }
    private WinEvent(boolean noInit) {}
    
    private static final WinEvent defaultInstance;
    public static WinEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public WinEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_WinEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_WinEvent_fieldAccessorTable;
    }
    
    // required int64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private boolean hasPlayerId;
    private long playerId_ = 0L;
    public boolean hasPlayerId() { return hasPlayerId; }
    public long getPlayerId() { return playerId_; }
    
    // required int64 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasPlayerId) return false;
      if (!hasGameId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPlayerId()) {
        output.writeInt64(1, getPlayerId());
      }
      if (hasGameId()) {
        output.writeInt64(2, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPlayerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getPlayerId());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.WinEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.WinEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.WinEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.WinEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.WinEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.WinEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.WinEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.WinEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.WinEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.WinEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.WinEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.WinEvent result;
      
      // Construct using com.pokware.protobuf.Events.WinEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.WinEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.WinEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.WinEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.WinEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.WinEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.WinEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.WinEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.WinEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.WinEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.WinEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.WinEvent) {
          return mergeFrom((com.pokware.protobuf.Events.WinEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.WinEvent other) {
        if (other == com.pokware.protobuf.Events.WinEvent.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPlayerId(input.readInt64());
              break;
            }
            case 16: {
              setGameId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int64 playerId = 1;
      public boolean hasPlayerId() {
        return result.hasPlayerId();
      }
      public long getPlayerId() {
        return result.getPlayerId();
      }
      public Builder setPlayerId(long value) {
        result.hasPlayerId = true;
        result.playerId_ = value;
        return this;
      }
      public Builder clearPlayerId() {
        result.hasPlayerId = false;
        result.playerId_ = 0L;
        return this;
      }
      
      // required int64 gameId = 2;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:WinEvent)
    }
    
    static {
      defaultInstance = new WinEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:WinEvent)
  }
  
  public static final class FlopEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use FlopEvent.newBuilder() to construct.
    private FlopEvent() {
      initFields();
    }
    private FlopEvent(boolean noInit) {}
    
    private static final FlopEvent defaultInstance;
    public static FlopEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public FlopEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_FlopEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_FlopEvent_fieldAccessorTable;
    }
    
    // required int32 card1 = 1;
    public static final int CARD1_FIELD_NUMBER = 1;
    private boolean hasCard1;
    private int card1_ = 0;
    public boolean hasCard1() { return hasCard1; }
    public int getCard1() { return card1_; }
    
    // required int32 card2 = 2;
    public static final int CARD2_FIELD_NUMBER = 2;
    private boolean hasCard2;
    private int card2_ = 0;
    public boolean hasCard2() { return hasCard2; }
    public int getCard2() { return card2_; }
    
    // required int32 card3 = 3;
    public static final int CARD3_FIELD_NUMBER = 3;
    private boolean hasCard3;
    private int card3_ = 0;
    public boolean hasCard3() { return hasCard3; }
    public int getCard3() { return card3_; }
    
    // required int64 gameId = 4;
    public static final int GAMEID_FIELD_NUMBER = 4;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCard1) return false;
      if (!hasCard2) return false;
      if (!hasCard3) return false;
      if (!hasGameId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCard1()) {
        output.writeInt32(1, getCard1());
      }
      if (hasCard2()) {
        output.writeInt32(2, getCard2());
      }
      if (hasCard3()) {
        output.writeInt32(3, getCard3());
      }
      if (hasGameId()) {
        output.writeInt64(4, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCard1()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCard1());
      }
      if (hasCard2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getCard2());
      }
      if (hasCard3()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getCard3());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.FlopEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.FlopEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.FlopEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.FlopEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.FlopEvent result;
      
      // Construct using com.pokware.protobuf.Events.FlopEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.FlopEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.FlopEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.FlopEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.FlopEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.FlopEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.FlopEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.FlopEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.FlopEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.FlopEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.FlopEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.FlopEvent) {
          return mergeFrom((com.pokware.protobuf.Events.FlopEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.FlopEvent other) {
        if (other == com.pokware.protobuf.Events.FlopEvent.getDefaultInstance()) return this;
        if (other.hasCard1()) {
          setCard1(other.getCard1());
        }
        if (other.hasCard2()) {
          setCard2(other.getCard2());
        }
        if (other.hasCard3()) {
          setCard3(other.getCard3());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCard1(input.readInt32());
              break;
            }
            case 16: {
              setCard2(input.readInt32());
              break;
            }
            case 24: {
              setCard3(input.readInt32());
              break;
            }
            case 32: {
              setGameId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int32 card1 = 1;
      public boolean hasCard1() {
        return result.hasCard1();
      }
      public int getCard1() {
        return result.getCard1();
      }
      public Builder setCard1(int value) {
        result.hasCard1 = true;
        result.card1_ = value;
        return this;
      }
      public Builder clearCard1() {
        result.hasCard1 = false;
        result.card1_ = 0;
        return this;
      }
      
      // required int32 card2 = 2;
      public boolean hasCard2() {
        return result.hasCard2();
      }
      public int getCard2() {
        return result.getCard2();
      }
      public Builder setCard2(int value) {
        result.hasCard2 = true;
        result.card2_ = value;
        return this;
      }
      public Builder clearCard2() {
        result.hasCard2 = false;
        result.card2_ = 0;
        return this;
      }
      
      // required int32 card3 = 3;
      public boolean hasCard3() {
        return result.hasCard3();
      }
      public int getCard3() {
        return result.getCard3();
      }
      public Builder setCard3(int value) {
        result.hasCard3 = true;
        result.card3_ = value;
        return this;
      }
      public Builder clearCard3() {
        result.hasCard3 = false;
        result.card3_ = 0;
        return this;
      }
      
      // required int64 gameId = 4;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlopEvent)
    }
    
    static {
      defaultInstance = new FlopEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlopEvent)
  }
  
  public static final class RiverEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use RiverEvent.newBuilder() to construct.
    private RiverEvent() {
      initFields();
    }
    private RiverEvent(boolean noInit) {}
    
    private static final RiverEvent defaultInstance;
    public static RiverEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public RiverEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_RiverEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_RiverEvent_fieldAccessorTable;
    }
    
    // required int32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private boolean hasCard;
    private int card_ = 0;
    public boolean hasCard() { return hasCard; }
    public int getCard() { return card_; }
    
    // required int64 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCard) return false;
      if (!hasGameId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCard()) {
        output.writeInt32(1, getCard());
      }
      if (hasGameId()) {
        output.writeInt64(2, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCard());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.RiverEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.RiverEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.RiverEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.RiverEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.RiverEvent result;
      
      // Construct using com.pokware.protobuf.Events.RiverEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.RiverEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.RiverEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.RiverEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.RiverEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.RiverEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.RiverEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.RiverEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.RiverEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.RiverEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.RiverEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.RiverEvent) {
          return mergeFrom((com.pokware.protobuf.Events.RiverEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.RiverEvent other) {
        if (other == com.pokware.protobuf.Events.RiverEvent.getDefaultInstance()) return this;
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCard(input.readInt32());
              break;
            }
            case 16: {
              setGameId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int32 card = 1;
      public boolean hasCard() {
        return result.hasCard();
      }
      public int getCard() {
        return result.getCard();
      }
      public Builder setCard(int value) {
        result.hasCard = true;
        result.card_ = value;
        return this;
      }
      public Builder clearCard() {
        result.hasCard = false;
        result.card_ = 0;
        return this;
      }
      
      // required int64 gameId = 2;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RiverEvent)
    }
    
    static {
      defaultInstance = new RiverEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RiverEvent)
  }
  
  public static final class TurnEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use TurnEvent.newBuilder() to construct.
    private TurnEvent() {
      initFields();
    }
    private TurnEvent(boolean noInit) {}
    
    private static final TurnEvent defaultInstance;
    public static TurnEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public TurnEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_TurnEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_TurnEvent_fieldAccessorTable;
    }
    
    // required int32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private boolean hasCard;
    private int card_ = 0;
    public boolean hasCard() { return hasCard; }
    public int getCard() { return card_; }
    
    // required int64 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCard) return false;
      if (!hasGameId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCard()) {
        output.writeInt32(1, getCard());
      }
      if (hasGameId()) {
        output.writeInt64(2, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCard());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TurnEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.TurnEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.TurnEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.TurnEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.TurnEvent result;
      
      // Construct using com.pokware.protobuf.Events.TurnEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.TurnEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.TurnEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.TurnEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.TurnEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.TurnEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.TurnEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.TurnEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.TurnEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.TurnEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.TurnEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.TurnEvent) {
          return mergeFrom((com.pokware.protobuf.Events.TurnEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.TurnEvent other) {
        if (other == com.pokware.protobuf.Events.TurnEvent.getDefaultInstance()) return this;
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCard(input.readInt32());
              break;
            }
            case 16: {
              setGameId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int32 card = 1;
      public boolean hasCard() {
        return result.hasCard();
      }
      public int getCard() {
        return result.getCard();
      }
      public Builder setCard(int value) {
        result.hasCard = true;
        result.card_ = value;
        return this;
      }
      public Builder clearCard() {
        result.hasCard = false;
        result.card_ = 0;
        return this;
      }
      
      // required int64 gameId = 2;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TurnEvent)
    }
    
    static {
      defaultInstance = new TurnEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TurnEvent)
  }
  
  public static final class DealCardsEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use DealCardsEvent.newBuilder() to construct.
    private DealCardsEvent() {
      initFields();
    }
    private DealCardsEvent(boolean noInit) {}
    
    private static final DealCardsEvent defaultInstance;
    public static DealCardsEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public DealCardsEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_DealCardsEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_DealCardsEvent_fieldAccessorTable;
    }
    
    // required int64 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasGameId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameId()) {
        output.writeInt64(1, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.DealCardsEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.DealCardsEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.DealCardsEvent result;
      
      // Construct using com.pokware.protobuf.Events.DealCardsEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.DealCardsEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.DealCardsEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.DealCardsEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.DealCardsEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.DealCardsEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.DealCardsEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.DealCardsEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.DealCardsEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.DealCardsEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.DealCardsEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.DealCardsEvent) {
          return mergeFrom((com.pokware.protobuf.Events.DealCardsEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.DealCardsEvent other) {
        if (other == com.pokware.protobuf.Events.DealCardsEvent.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int64 gameId = 1;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DealCardsEvent)
    }
    
    static {
      defaultInstance = new DealCardsEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DealCardsEvent)
  }
  
  public static final class HandStartEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use HandStartEvent.newBuilder() to construct.
    private HandStartEvent() {
      initFields();
    }
    private HandStartEvent(boolean noInit) {}
    
    private static final HandStartEvent defaultInstance;
    public static HandStartEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public HandStartEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_HandStartEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_HandStartEvent_fieldAccessorTable;
    }
    
    // required int64 gameId = 3;
    public static final int GAMEID_FIELD_NUMBER = 3;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    // required int32 hole1 = 1;
    public static final int HOLE1_FIELD_NUMBER = 1;
    private boolean hasHole1;
    private int hole1_ = 0;
    public boolean hasHole1() { return hasHole1; }
    public int getHole1() { return hole1_; }
    
    // required int32 hole2 = 2;
    public static final int HOLE2_FIELD_NUMBER = 2;
    private boolean hasHole2;
    private int hole2_ = 0;
    public boolean hasHole2() { return hasHole2; }
    public int getHole2() { return hole2_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasGameId) return false;
      if (!hasHole1) return false;
      if (!hasHole2) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHole1()) {
        output.writeInt32(1, getHole1());
      }
      if (hasHole2()) {
        output.writeInt32(2, getHole2());
      }
      if (hasGameId()) {
        output.writeInt64(3, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHole1()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getHole1());
      }
      if (hasHole2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getHole2());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.HandStartEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.HandStartEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.HandStartEvent result;
      
      // Construct using com.pokware.protobuf.Events.HandStartEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.HandStartEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.HandStartEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.HandStartEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.HandStartEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.HandStartEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.HandStartEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.HandStartEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.HandStartEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.HandStartEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.HandStartEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.HandStartEvent) {
          return mergeFrom((com.pokware.protobuf.Events.HandStartEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.HandStartEvent other) {
        if (other == com.pokware.protobuf.Events.HandStartEvent.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasHole1()) {
          setHole1(other.getHole1());
        }
        if (other.hasHole2()) {
          setHole2(other.getHole2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setHole1(input.readInt32());
              break;
            }
            case 16: {
              setHole2(input.readInt32());
              break;
            }
            case 24: {
              setGameId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int64 gameId = 3;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // required int32 hole1 = 1;
      public boolean hasHole1() {
        return result.hasHole1();
      }
      public int getHole1() {
        return result.getHole1();
      }
      public Builder setHole1(int value) {
        result.hasHole1 = true;
        result.hole1_ = value;
        return this;
      }
      public Builder clearHole1() {
        result.hasHole1 = false;
        result.hole1_ = 0;
        return this;
      }
      
      // required int32 hole2 = 2;
      public boolean hasHole2() {
        return result.hasHole2();
      }
      public int getHole2() {
        return result.getHole2();
      }
      public Builder setHole2(int value) {
        result.hasHole2 = true;
        result.hole2_ = value;
        return this;
      }
      public Builder clearHole2() {
        result.hasHole2 = false;
        result.hole2_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:HandStartEvent)
    }
    
    static {
      defaultInstance = new HandStartEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:HandStartEvent)
  }
  
  public static final class TimeOutEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use TimeOutEvent.newBuilder() to construct.
    private TimeOutEvent() {
      initFields();
    }
    private TimeOutEvent(boolean noInit) {}
    
    private static final TimeOutEvent defaultInstance;
    public static TimeOutEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public TimeOutEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_TimeOutEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_TimeOutEvent_fieldAccessorTable;
    }
    
    // required int64 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasGameId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameId()) {
        output.writeInt64(1, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.TimeOutEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.TimeOutEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.TimeOutEvent result;
      
      // Construct using com.pokware.protobuf.Events.TimeOutEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.TimeOutEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.TimeOutEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.TimeOutEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.TimeOutEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.TimeOutEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.TimeOutEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.TimeOutEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.TimeOutEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.TimeOutEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.TimeOutEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.TimeOutEvent) {
          return mergeFrom((com.pokware.protobuf.Events.TimeOutEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.TimeOutEvent other) {
        if (other == com.pokware.protobuf.Events.TimeOutEvent.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int64 gameId = 1;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TimeOutEvent)
    }
    
    static {
      defaultInstance = new TimeOutEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TimeOutEvent)
  }
  
  public static final class SeatStatusEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use SeatStatusEvent.newBuilder() to construct.
    private SeatStatusEvent() {
      initFields();
    }
    private SeatStatusEvent(boolean noInit) {}
    
    private static final SeatStatusEvent defaultInstance;
    public static SeatStatusEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public SeatStatusEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_SeatStatusEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_SeatStatusEvent_fieldAccessorTable;
    }
    
    // required int64 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    // required .Seat seat = 2;
    public static final int SEAT_FIELD_NUMBER = 2;
    private boolean hasSeat;
    private com.pokware.protobuf.Data.Seat seat_;
    public boolean hasSeat() { return hasSeat; }
    public com.pokware.protobuf.Data.Seat getSeat() { return seat_; }
    
    private void initFields() {
      seat_ = com.pokware.protobuf.Data.Seat.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasGameId) return false;
      if (!hasSeat) return false;
      if (!getSeat().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameId()) {
        output.writeInt64(1, getGameId());
      }
      if (hasSeat()) {
        output.writeMessage(2, getSeat());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getGameId());
      }
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSeat());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.SeatStatusEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.SeatStatusEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.SeatStatusEvent result;
      
      // Construct using com.pokware.protobuf.Events.SeatStatusEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.SeatStatusEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.SeatStatusEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.SeatStatusEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.SeatStatusEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.SeatStatusEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.SeatStatusEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.SeatStatusEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.SeatStatusEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.SeatStatusEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.SeatStatusEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.SeatStatusEvent) {
          return mergeFrom((com.pokware.protobuf.Events.SeatStatusEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.SeatStatusEvent other) {
        if (other == com.pokware.protobuf.Events.SeatStatusEvent.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasSeat()) {
          mergeSeat(other.getSeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameId(input.readInt64());
              break;
            }
            case 18: {
              com.pokware.protobuf.Data.Seat.Builder subBuilder = com.pokware.protobuf.Data.Seat.newBuilder();
              if (hasSeat()) {
                subBuilder.mergeFrom(getSeat());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSeat(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int64 gameId = 1;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // required .Seat seat = 2;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public com.pokware.protobuf.Data.Seat getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(com.pokware.protobuf.Data.Seat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder setSeat(com.pokware.protobuf.Data.Seat.Builder builderForValue) {
        result.hasSeat = true;
        result.seat_ = builderForValue.build();
        return this;
      }
      public Builder mergeSeat(com.pokware.protobuf.Data.Seat value) {
        if (result.hasSeat() &&
            result.seat_ != com.pokware.protobuf.Data.Seat.getDefaultInstance()) {
          result.seat_ =
            com.pokware.protobuf.Data.Seat.newBuilder(result.seat_).mergeFrom(value).buildPartial();
        } else {
          result.seat_ = value;
        }
        result.hasSeat = true;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = com.pokware.protobuf.Data.Seat.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:SeatStatusEvent)
    }
    
    static {
      defaultInstance = new SeatStatusEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SeatStatusEvent)
  }
  
  public static final class TableStatusEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use TableStatusEvent.newBuilder() to construct.
    private TableStatusEvent() {
      initFields();
    }
    private TableStatusEvent(boolean noInit) {}
    
    private static final TableStatusEvent defaultInstance;
    public static TableStatusEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public TableStatusEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Events.internal_static_TableStatusEvent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Events.internal_static_TableStatusEvent_fieldAccessorTable;
    }
    
    // required int64 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    // required .TableStatus table = 2;
    public static final int TABLE_FIELD_NUMBER = 2;
    private boolean hasTable;
    private com.pokware.protobuf.Data.TableStatus table_;
    public boolean hasTable() { return hasTable; }
    public com.pokware.protobuf.Data.TableStatus getTable() { return table_; }
    
    private void initFields() {
      table_ = com.pokware.protobuf.Data.TableStatus.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasGameId) return false;
      if (!hasTable) return false;
      if (!getTable().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameId()) {
        output.writeInt64(1, getGameId());
      }
      if (hasTable()) {
        output.writeMessage(2, getTable());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getGameId());
      }
      if (hasTable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTable());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Events.TableStatusEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Events.TableStatusEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Events.TableStatusEvent result;
      
      // Construct using com.pokware.protobuf.Events.TableStatusEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Events.TableStatusEvent();
        return builder;
      }
      
      protected com.pokware.protobuf.Events.TableStatusEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Events.TableStatusEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Events.TableStatusEvent.getDescriptor();
      }
      
      public com.pokware.protobuf.Events.TableStatusEvent getDefaultInstanceForType() {
        return com.pokware.protobuf.Events.TableStatusEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Events.TableStatusEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Events.TableStatusEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Events.TableStatusEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Events.TableStatusEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Events.TableStatusEvent) {
          return mergeFrom((com.pokware.protobuf.Events.TableStatusEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Events.TableStatusEvent other) {
        if (other == com.pokware.protobuf.Events.TableStatusEvent.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasTable()) {
          mergeTable(other.getTable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameId(input.readInt64());
              break;
            }
            case 18: {
              com.pokware.protobuf.Data.TableStatus.Builder subBuilder = com.pokware.protobuf.Data.TableStatus.newBuilder();
              if (hasTable()) {
                subBuilder.mergeFrom(getTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int64 gameId = 1;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // required .TableStatus table = 2;
      public boolean hasTable() {
        return result.hasTable();
      }
      public com.pokware.protobuf.Data.TableStatus getTable() {
        return result.getTable();
      }
      public Builder setTable(com.pokware.protobuf.Data.TableStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTable = true;
        result.table_ = value;
        return this;
      }
      public Builder setTable(com.pokware.protobuf.Data.TableStatus.Builder builderForValue) {
        result.hasTable = true;
        result.table_ = builderForValue.build();
        return this;
      }
      public Builder mergeTable(com.pokware.protobuf.Data.TableStatus value) {
        if (result.hasTable() &&
            result.table_ != com.pokware.protobuf.Data.TableStatus.getDefaultInstance()) {
          result.table_ =
            com.pokware.protobuf.Data.TableStatus.newBuilder(result.table_).mergeFrom(value).buildPartial();
        } else {
          result.table_ = value;
        }
        result.hasTable = true;
        return this;
      }
      public Builder clearTable() {
        result.hasTable = false;
        result.table_ = com.pokware.protobuf.Data.TableStatus.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TableStatusEvent)
    }
    
    static {
      defaultInstance = new TableStatusEvent(true);
      com.pokware.protobuf.Events.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TableStatusEvent)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ServerEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ServerEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BetEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BetEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WinEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WinEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlopEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlopEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RiverEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RiverEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TurnEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TurnEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DealCardsEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DealCardsEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HandStartEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HandStartEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TimeOutEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TimeOutEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SeatStatusEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SeatStatusEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TableStatusEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TableStatusEvent_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014events.proto\032\ndata.proto\"\316\004\n\013ServerEve" +
      "nt\022\037\n\004type\030\001 \002(\0162\021.ServerEvent.Type\022\033\n\010b" +
      "etEvent\030\002 \001(\0132\t.BetEvent\022\035\n\tflopEvent\030\004 " +
      "\001(\0132\n.FlopEvent\022\037\n\nriverEvent\030\005 \001(\0132\013.Ri" +
      "verEvent\022\035\n\tturnEvent\030\006 \001(\0132\n.TurnEvent\022" +
      "\'\n\016dealCardsEvent\030\007 \001(\0132\017.DealCardsEvent" +
      "\022\'\n\016handStartEvent\030\010 \001(\0132\017.HandStartEven" +
      "t\022#\n\014timeOutEvent\030\t \001(\0132\r.TimeOutEvent\022+" +
      "\n\020tableStatusEvent\030\n \001(\0132\021.TableStatusEv" +
      "ent\022\033\n\010winEvent\030\013 \001(\0132\t.WinEvent\022)\n\017seat",
      "StatusEvent\030\014 \001(\0132\020.SeatStatusEvent\"\265\001\n\004" +
      "Type\022\014\n\010BetEvent\020\001\022\r\n\tFlopEvent\020\003\022\016\n\nRiv" +
      "erEvent\020\004\022\r\n\tTurnEvent\020\005\022\022\n\016DealCardsEve" +
      "nt\020\006\022\022\n\016HandStartEvent\020\007\022\020\n\014TimeOutEvent" +
      "\020\010\022\024\n\020TableStatusEvent\020\t\022\014\n\010WinEvent\020\n\022\023" +
      "\n\017SeatStatusEvent\020\013\"A\n\010BetEvent\022\020\n\010playe" +
      "rId\030\001 \002(\003\022\016\n\006gameId\030\002 \002(\003\022\023\n\013chipsAmount" +
      "\030\003 \002(\005\",\n\010WinEvent\022\020\n\010playerId\030\001 \002(\003\022\016\n\006" +
      "gameId\030\002 \002(\003\"H\n\tFlopEvent\022\r\n\005card1\030\001 \002(\005" +
      "\022\r\n\005card2\030\002 \002(\005\022\r\n\005card3\030\003 \002(\005\022\016\n\006gameId",
      "\030\004 \002(\003\"*\n\nRiverEvent\022\014\n\004card\030\001 \002(\005\022\016\n\006ga" +
      "meId\030\002 \002(\003\")\n\tTurnEvent\022\014\n\004card\030\001 \002(\005\022\016\n" +
      "\006gameId\030\002 \002(\003\" \n\016DealCardsEvent\022\016\n\006gameI" +
      "d\030\001 \002(\003\">\n\016HandStartEvent\022\016\n\006gameId\030\003 \002(" +
      "\003\022\r\n\005hole1\030\001 \002(\005\022\r\n\005hole2\030\002 \002(\005\"\036\n\014TimeO" +
      "utEvent\022\016\n\006gameId\030\001 \002(\003\"6\n\017SeatStatusEve" +
      "nt\022\016\n\006gameId\030\001 \002(\003\022\023\n\004seat\030\002 \002(\0132\005.Seat\"" +
      "?\n\020TableStatusEvent\022\016\n\006gameId\030\001 \002(\003\022\033\n\005t" +
      "able\030\002 \002(\0132\014.TableStatusB\036\n\024com.pokware." +
      "protobufB\006Events"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ServerEvent_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ServerEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ServerEvent_descriptor,
              new java.lang.String[] { "Type", "BetEvent", "FlopEvent", "RiverEvent", "TurnEvent", "DealCardsEvent", "HandStartEvent", "TimeOutEvent", "TableStatusEvent", "WinEvent", "SeatStatusEvent", },
              com.pokware.protobuf.Events.ServerEvent.class,
              com.pokware.protobuf.Events.ServerEvent.Builder.class);
          internal_static_BetEvent_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_BetEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BetEvent_descriptor,
              new java.lang.String[] { "PlayerId", "GameId", "ChipsAmount", },
              com.pokware.protobuf.Events.BetEvent.class,
              com.pokware.protobuf.Events.BetEvent.Builder.class);
          internal_static_WinEvent_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_WinEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WinEvent_descriptor,
              new java.lang.String[] { "PlayerId", "GameId", },
              com.pokware.protobuf.Events.WinEvent.class,
              com.pokware.protobuf.Events.WinEvent.Builder.class);
          internal_static_FlopEvent_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_FlopEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlopEvent_descriptor,
              new java.lang.String[] { "Card1", "Card2", "Card3", "GameId", },
              com.pokware.protobuf.Events.FlopEvent.class,
              com.pokware.protobuf.Events.FlopEvent.Builder.class);
          internal_static_RiverEvent_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_RiverEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RiverEvent_descriptor,
              new java.lang.String[] { "Card", "GameId", },
              com.pokware.protobuf.Events.RiverEvent.class,
              com.pokware.protobuf.Events.RiverEvent.Builder.class);
          internal_static_TurnEvent_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_TurnEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TurnEvent_descriptor,
              new java.lang.String[] { "Card", "GameId", },
              com.pokware.protobuf.Events.TurnEvent.class,
              com.pokware.protobuf.Events.TurnEvent.Builder.class);
          internal_static_DealCardsEvent_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_DealCardsEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DealCardsEvent_descriptor,
              new java.lang.String[] { "GameId", },
              com.pokware.protobuf.Events.DealCardsEvent.class,
              com.pokware.protobuf.Events.DealCardsEvent.Builder.class);
          internal_static_HandStartEvent_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_HandStartEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HandStartEvent_descriptor,
              new java.lang.String[] { "GameId", "Hole1", "Hole2", },
              com.pokware.protobuf.Events.HandStartEvent.class,
              com.pokware.protobuf.Events.HandStartEvent.Builder.class);
          internal_static_TimeOutEvent_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_TimeOutEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TimeOutEvent_descriptor,
              new java.lang.String[] { "GameId", },
              com.pokware.protobuf.Events.TimeOutEvent.class,
              com.pokware.protobuf.Events.TimeOutEvent.Builder.class);
          internal_static_SeatStatusEvent_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_SeatStatusEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SeatStatusEvent_descriptor,
              new java.lang.String[] { "GameId", "Seat", },
              com.pokware.protobuf.Events.SeatStatusEvent.class,
              com.pokware.protobuf.Events.SeatStatusEvent.Builder.class);
          internal_static_TableStatusEvent_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_TableStatusEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TableStatusEvent_descriptor,
              new java.lang.String[] { "GameId", "Table", },
              com.pokware.protobuf.Events.TableStatusEvent.class,
              com.pokware.protobuf.Events.TableStatusEvent.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.pokware.protobuf.Data.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
