// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

package com.pokware.protobuf;

public final class Data {
  private Data() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Game extends
      com.google.protobuf.GeneratedMessage {
    // Use Game.newBuilder() to construct.
    private Game() {
      initFields();
    }
    private Game(boolean noInit) {}
    
    private static final Game defaultInstance;
    public static Game getDefaultInstance() {
      return defaultInstance;
    }
    
    public Game getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Data.internal_static_Game_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Data.internal_static_Game_fieldAccessorTable;
    }
    
    // required string gameName = 1;
    public static final int GAMENAME_FIELD_NUMBER = 1;
    private boolean hasGameName;
    private java.lang.String gameName_ = "";
    public boolean hasGameName() { return hasGameName; }
    public java.lang.String getGameName() { return gameName_; }
    
    // required int64 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    // required int32 players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private boolean hasPlayers;
    private int players_ = 0;
    public boolean hasPlayers() { return hasPlayers; }
    public int getPlayers() { return players_; }
    
    // required int32 sb = 4;
    public static final int SB_FIELD_NUMBER = 4;
    private boolean hasSb;
    private int sb_ = 0;
    public boolean hasSb() { return hasSb; }
    public int getSb() { return sb_; }
    
    // required int32 bb = 5;
    public static final int BB_FIELD_NUMBER = 5;
    private boolean hasBb;
    private int bb_ = 0;
    public boolean hasBb() { return hasBb; }
    public int getBb() { return bb_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasGameName) return false;
      if (!hasGameId) return false;
      if (!hasPlayers) return false;
      if (!hasSb) return false;
      if (!hasBb) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameName()) {
        output.writeString(1, getGameName());
      }
      if (hasGameId()) {
        output.writeInt64(2, getGameId());
      }
      if (hasPlayers()) {
        output.writeInt32(3, getPlayers());
      }
      if (hasSb()) {
        output.writeInt32(4, getSb());
      }
      if (hasBb()) {
        output.writeInt32(5, getBb());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGameName());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getGameId());
      }
      if (hasPlayers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getPlayers());
      }
      if (hasSb()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getSb());
      }
      if (hasBb()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getBb());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Data.Game parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.Game parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Game parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.Game parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Game parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.Game parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Game parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.Game parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.Game parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.Game parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Data.Game prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Data.Game result;
      
      // Construct using com.pokware.protobuf.Data.Game.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Data.Game();
        return builder;
      }
      
      protected com.pokware.protobuf.Data.Game internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Data.Game();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Data.Game.getDescriptor();
      }
      
      public com.pokware.protobuf.Data.Game getDefaultInstanceForType() {
        return com.pokware.protobuf.Data.Game.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Data.Game build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Data.Game buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Data.Game buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Data.Game returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Data.Game) {
          return mergeFrom((com.pokware.protobuf.Data.Game)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Data.Game other) {
        if (other == com.pokware.protobuf.Data.Game.getDefaultInstance()) return this;
        if (other.hasGameName()) {
          setGameName(other.getGameName());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasPlayers()) {
          setPlayers(other.getPlayers());
        }
        if (other.hasSb()) {
          setSb(other.getSb());
        }
        if (other.hasBb()) {
          setBb(other.getBb());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setGameName(input.readString());
              break;
            }
            case 16: {
              setGameId(input.readInt64());
              break;
            }
            case 24: {
              setPlayers(input.readInt32());
              break;
            }
            case 32: {
              setSb(input.readInt32());
              break;
            }
            case 40: {
              setBb(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string gameName = 1;
      public boolean hasGameName() {
        return result.hasGameName();
      }
      public java.lang.String getGameName() {
        return result.getGameName();
      }
      public Builder setGameName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameName = true;
        result.gameName_ = value;
        return this;
      }
      public Builder clearGameName() {
        result.hasGameName = false;
        result.gameName_ = getDefaultInstance().getGameName();
        return this;
      }
      
      // required int64 gameId = 2;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // required int32 players = 3;
      public boolean hasPlayers() {
        return result.hasPlayers();
      }
      public int getPlayers() {
        return result.getPlayers();
      }
      public Builder setPlayers(int value) {
        result.hasPlayers = true;
        result.players_ = value;
        return this;
      }
      public Builder clearPlayers() {
        result.hasPlayers = false;
        result.players_ = 0;
        return this;
      }
      
      // required int32 sb = 4;
      public boolean hasSb() {
        return result.hasSb();
      }
      public int getSb() {
        return result.getSb();
      }
      public Builder setSb(int value) {
        result.hasSb = true;
        result.sb_ = value;
        return this;
      }
      public Builder clearSb() {
        result.hasSb = false;
        result.sb_ = 0;
        return this;
      }
      
      // required int32 bb = 5;
      public boolean hasBb() {
        return result.hasBb();
      }
      public int getBb() {
        return result.getBb();
      }
      public Builder setBb(int value) {
        result.hasBb = true;
        result.bb_ = value;
        return this;
      }
      public Builder clearBb() {
        result.hasBb = false;
        result.bb_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Game)
    }
    
    static {
      defaultInstance = new Game(true);
      com.pokware.protobuf.Data.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Game)
  }
  
  public static final class Player extends
      com.google.protobuf.GeneratedMessage {
    // Use Player.newBuilder() to construct.
    private Player() {
      initFields();
    }
    private Player(boolean noInit) {}
    
    private static final Player defaultInstance;
    public static Player getDefaultInstance() {
      return defaultInstance;
    }
    
    public Player getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Data.internal_static_Player_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Data.internal_static_Player_fieldAccessorTable;
    }
    
    // required int64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private boolean hasPlayerId;
    private long playerId_ = 0L;
    public boolean hasPlayerId() { return hasPlayerId; }
    public long getPlayerId() { return playerId_; }
    
    // required string userName = 2;
    public static final int USERNAME_FIELD_NUMBER = 2;
    private boolean hasUserName;
    private java.lang.String userName_ = "";
    public boolean hasUserName() { return hasUserName; }
    public java.lang.String getUserName() { return userName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasPlayerId) return false;
      if (!hasUserName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPlayerId()) {
        output.writeInt64(1, getPlayerId());
      }
      if (hasUserName()) {
        output.writeString(2, getUserName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPlayerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getPlayerId());
      }
      if (hasUserName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUserName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Data.Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Data.Player prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Data.Player result;
      
      // Construct using com.pokware.protobuf.Data.Player.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Data.Player();
        return builder;
      }
      
      protected com.pokware.protobuf.Data.Player internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Data.Player();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Data.Player.getDescriptor();
      }
      
      public com.pokware.protobuf.Data.Player getDefaultInstanceForType() {
        return com.pokware.protobuf.Data.Player.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Data.Player build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Data.Player buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Data.Player buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Data.Player returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Data.Player) {
          return mergeFrom((com.pokware.protobuf.Data.Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Data.Player other) {
        if (other == com.pokware.protobuf.Data.Player.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasUserName()) {
          setUserName(other.getUserName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPlayerId(input.readInt64());
              break;
            }
            case 18: {
              setUserName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int64 playerId = 1;
      public boolean hasPlayerId() {
        return result.hasPlayerId();
      }
      public long getPlayerId() {
        return result.getPlayerId();
      }
      public Builder setPlayerId(long value) {
        result.hasPlayerId = true;
        result.playerId_ = value;
        return this;
      }
      public Builder clearPlayerId() {
        result.hasPlayerId = false;
        result.playerId_ = 0L;
        return this;
      }
      
      // required string userName = 2;
      public boolean hasUserName() {
        return result.hasUserName();
      }
      public java.lang.String getUserName() {
        return result.getUserName();
      }
      public Builder setUserName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder clearUserName() {
        result.hasUserName = false;
        result.userName_ = getDefaultInstance().getUserName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Player)
    }
    
    static {
      defaultInstance = new Player(true);
      com.pokware.protobuf.Data.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Player)
  }
  
  public static final class TableStatus extends
      com.google.protobuf.GeneratedMessage {
    // Use TableStatus.newBuilder() to construct.
    private TableStatus() {
      initFields();
    }
    private TableStatus(boolean noInit) {}
    
    private static final TableStatus defaultInstance;
    public static TableStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public TableStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Data.internal_static_TableStatus_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Data.internal_static_TableStatus_fieldAccessorTable;
    }
    
    // repeated .Seat seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private java.util.List<com.pokware.protobuf.Data.Seat> seat_ =
      java.util.Collections.emptyList();
    public java.util.List<com.pokware.protobuf.Data.Seat> getSeatList() {
      return seat_;
    }
    public int getSeatCount() { return seat_.size(); }
    public com.pokware.protobuf.Data.Seat getSeat(int index) {
      return seat_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.pokware.protobuf.Data.Seat element : getSeatList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.pokware.protobuf.Data.Seat element : getSeatList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.pokware.protobuf.Data.Seat element : getSeatList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Data.TableStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.TableStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.TableStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.TableStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.TableStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.TableStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.TableStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.TableStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.TableStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.TableStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Data.TableStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Data.TableStatus result;
      
      // Construct using com.pokware.protobuf.Data.TableStatus.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Data.TableStatus();
        return builder;
      }
      
      protected com.pokware.protobuf.Data.TableStatus internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Data.TableStatus();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Data.TableStatus.getDescriptor();
      }
      
      public com.pokware.protobuf.Data.TableStatus getDefaultInstanceForType() {
        return com.pokware.protobuf.Data.TableStatus.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Data.TableStatus build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Data.TableStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Data.TableStatus buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.seat_ != java.util.Collections.EMPTY_LIST) {
          result.seat_ =
            java.util.Collections.unmodifiableList(result.seat_);
        }
        com.pokware.protobuf.Data.TableStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Data.TableStatus) {
          return mergeFrom((com.pokware.protobuf.Data.TableStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Data.TableStatus other) {
        if (other == com.pokware.protobuf.Data.TableStatus.getDefaultInstance()) return this;
        if (!other.seat_.isEmpty()) {
          if (result.seat_.isEmpty()) {
            result.seat_ = new java.util.ArrayList<com.pokware.protobuf.Data.Seat>();
          }
          result.seat_.addAll(other.seat_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.pokware.protobuf.Data.Seat.Builder subBuilder = com.pokware.protobuf.Data.Seat.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSeat(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Seat seat = 1;
      public java.util.List<com.pokware.protobuf.Data.Seat> getSeatList() {
        return java.util.Collections.unmodifiableList(result.seat_);
      }
      public int getSeatCount() {
        return result.getSeatCount();
      }
      public com.pokware.protobuf.Data.Seat getSeat(int index) {
        return result.getSeat(index);
      }
      public Builder setSeat(int index, com.pokware.protobuf.Data.Seat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.seat_.set(index, value);
        return this;
      }
      public Builder setSeat(int index, com.pokware.protobuf.Data.Seat.Builder builderForValue) {
        result.seat_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSeat(com.pokware.protobuf.Data.Seat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.seat_.isEmpty()) {
          result.seat_ = new java.util.ArrayList<com.pokware.protobuf.Data.Seat>();
        }
        result.seat_.add(value);
        return this;
      }
      public Builder addSeat(com.pokware.protobuf.Data.Seat.Builder builderForValue) {
        if (result.seat_.isEmpty()) {
          result.seat_ = new java.util.ArrayList<com.pokware.protobuf.Data.Seat>();
        }
        result.seat_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSeat(
          java.lang.Iterable<? extends com.pokware.protobuf.Data.Seat> values) {
        if (result.seat_.isEmpty()) {
          result.seat_ = new java.util.ArrayList<com.pokware.protobuf.Data.Seat>();
        }
        super.addAll(values, result.seat_);
        return this;
      }
      public Builder clearSeat() {
        result.seat_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TableStatus)
    }
    
    static {
      defaultInstance = new TableStatus(true);
      com.pokware.protobuf.Data.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TableStatus)
  }
  
  public static final class Seat extends
      com.google.protobuf.GeneratedMessage {
    // Use Seat.newBuilder() to construct.
    private Seat() {
      initFields();
    }
    private Seat(boolean noInit) {}
    
    private static final Seat defaultInstance;
    public static Seat getDefaultInstance() {
      return defaultInstance;
    }
    
    public Seat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pokware.protobuf.Data.internal_static_Seat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pokware.protobuf.Data.internal_static_Seat_fieldAccessorTable;
    }
    
    // required int32 index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private boolean hasIndex;
    private int index_ = 0;
    public boolean hasIndex() { return hasIndex; }
    public int getIndex() { return index_; }
    
    // optional .Player player = 2;
    public static final int PLAYER_FIELD_NUMBER = 2;
    private boolean hasPlayer;
    private com.pokware.protobuf.Data.Player player_;
    public boolean hasPlayer() { return hasPlayer; }
    public com.pokware.protobuf.Data.Player getPlayer() { return player_; }
    
    // optional int32 stack = 3;
    public static final int STACK_FIELD_NUMBER = 3;
    private boolean hasStack;
    private int stack_ = 0;
    public boolean hasStack() { return hasStack; }
    public int getStack() { return stack_; }
    
    // optional int32 bet = 4;
    public static final int BET_FIELD_NUMBER = 4;
    private boolean hasBet;
    private int bet_ = 0;
    public boolean hasBet() { return hasBet; }
    public int getBet() { return bet_; }
    
    // optional bool dealerFlag = 5;
    public static final int DEALERFLAG_FIELD_NUMBER = 5;
    private boolean hasDealerFlag;
    private boolean dealerFlag_ = false;
    public boolean hasDealerFlag() { return hasDealerFlag; }
    public boolean getDealerFlag() { return dealerFlag_; }
    
    // optional bool smallBlindFlag = 6;
    public static final int SMALLBLINDFLAG_FIELD_NUMBER = 6;
    private boolean hasSmallBlindFlag;
    private boolean smallBlindFlag_ = false;
    public boolean hasSmallBlindFlag() { return hasSmallBlindFlag; }
    public boolean getSmallBlindFlag() { return smallBlindFlag_; }
    
    // optional bool bigBlindFlag = 7;
    public static final int BIGBLINDFLAG_FIELD_NUMBER = 7;
    private boolean hasBigBlindFlag;
    private boolean bigBlindFlag_ = false;
    public boolean hasBigBlindFlag() { return hasBigBlindFlag; }
    public boolean getBigBlindFlag() { return bigBlindFlag_; }
    
    // optional bool waitingFlag = 8;
    public static final int WAITINGFLAG_FIELD_NUMBER = 8;
    private boolean hasWaitingFlag;
    private boolean waitingFlag_ = false;
    public boolean hasWaitingFlag() { return hasWaitingFlag; }
    public boolean getWaitingFlag() { return waitingFlag_; }
    
    // optional bool awayFlag = 9;
    public static final int AWAYFLAG_FIELD_NUMBER = 9;
    private boolean hasAwayFlag;
    private boolean awayFlag_ = false;
    public boolean hasAwayFlag() { return hasAwayFlag; }
    public boolean getAwayFlag() { return awayFlag_; }
    
    // optional bool foldFlag = 10;
    public static final int FOLDFLAG_FIELD_NUMBER = 10;
    private boolean hasFoldFlag;
    private boolean foldFlag_ = false;
    public boolean hasFoldFlag() { return hasFoldFlag; }
    public boolean getFoldFlag() { return foldFlag_; }
    
    private void initFields() {
      player_ = com.pokware.protobuf.Data.Player.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasIndex) return false;
      if (hasPlayer()) {
        if (!getPlayer().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIndex()) {
        output.writeInt32(1, getIndex());
      }
      if (hasPlayer()) {
        output.writeMessage(2, getPlayer());
      }
      if (hasStack()) {
        output.writeInt32(3, getStack());
      }
      if (hasBet()) {
        output.writeInt32(4, getBet());
      }
      if (hasDealerFlag()) {
        output.writeBool(5, getDealerFlag());
      }
      if (hasSmallBlindFlag()) {
        output.writeBool(6, getSmallBlindFlag());
      }
      if (hasBigBlindFlag()) {
        output.writeBool(7, getBigBlindFlag());
      }
      if (hasWaitingFlag()) {
        output.writeBool(8, getWaitingFlag());
      }
      if (hasAwayFlag()) {
        output.writeBool(9, getAwayFlag());
      }
      if (hasFoldFlag()) {
        output.writeBool(10, getFoldFlag());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getIndex());
      }
      if (hasPlayer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPlayer());
      }
      if (hasStack()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getStack());
      }
      if (hasBet()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getBet());
      }
      if (hasDealerFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getDealerFlag());
      }
      if (hasSmallBlindFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getSmallBlindFlag());
      }
      if (hasBigBlindFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, getBigBlindFlag());
      }
      if (hasWaitingFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getWaitingFlag());
      }
      if (hasAwayFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, getAwayFlag());
      }
      if (hasFoldFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, getFoldFlag());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.pokware.protobuf.Data.Seat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.Seat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Seat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.pokware.protobuf.Data.Seat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Seat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.Seat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.pokware.protobuf.Data.Seat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.Seat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.pokware.protobuf.Data.Seat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.pokware.protobuf.Data.Seat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.pokware.protobuf.Data.Seat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.pokware.protobuf.Data.Seat result;
      
      // Construct using com.pokware.protobuf.Data.Seat.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.pokware.protobuf.Data.Seat();
        return builder;
      }
      
      protected com.pokware.protobuf.Data.Seat internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.pokware.protobuf.Data.Seat();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pokware.protobuf.Data.Seat.getDescriptor();
      }
      
      public com.pokware.protobuf.Data.Seat getDefaultInstanceForType() {
        return com.pokware.protobuf.Data.Seat.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.pokware.protobuf.Data.Seat build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.pokware.protobuf.Data.Seat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.pokware.protobuf.Data.Seat buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.pokware.protobuf.Data.Seat returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pokware.protobuf.Data.Seat) {
          return mergeFrom((com.pokware.protobuf.Data.Seat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.pokware.protobuf.Data.Seat other) {
        if (other == com.pokware.protobuf.Data.Seat.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        if (other.hasStack()) {
          setStack(other.getStack());
        }
        if (other.hasBet()) {
          setBet(other.getBet());
        }
        if (other.hasDealerFlag()) {
          setDealerFlag(other.getDealerFlag());
        }
        if (other.hasSmallBlindFlag()) {
          setSmallBlindFlag(other.getSmallBlindFlag());
        }
        if (other.hasBigBlindFlag()) {
          setBigBlindFlag(other.getBigBlindFlag());
        }
        if (other.hasWaitingFlag()) {
          setWaitingFlag(other.getWaitingFlag());
        }
        if (other.hasAwayFlag()) {
          setAwayFlag(other.getAwayFlag());
        }
        if (other.hasFoldFlag()) {
          setFoldFlag(other.getFoldFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIndex(input.readInt32());
              break;
            }
            case 18: {
              com.pokware.protobuf.Data.Player.Builder subBuilder = com.pokware.protobuf.Data.Player.newBuilder();
              if (hasPlayer()) {
                subBuilder.mergeFrom(getPlayer());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPlayer(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setStack(input.readInt32());
              break;
            }
            case 32: {
              setBet(input.readInt32());
              break;
            }
            case 40: {
              setDealerFlag(input.readBool());
              break;
            }
            case 48: {
              setSmallBlindFlag(input.readBool());
              break;
            }
            case 56: {
              setBigBlindFlag(input.readBool());
              break;
            }
            case 64: {
              setWaitingFlag(input.readBool());
              break;
            }
            case 72: {
              setAwayFlag(input.readBool());
              break;
            }
            case 80: {
              setFoldFlag(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required int32 index = 1;
      public boolean hasIndex() {
        return result.hasIndex();
      }
      public int getIndex() {
        return result.getIndex();
      }
      public Builder setIndex(int value) {
        result.hasIndex = true;
        result.index_ = value;
        return this;
      }
      public Builder clearIndex() {
        result.hasIndex = false;
        result.index_ = 0;
        return this;
      }
      
      // optional .Player player = 2;
      public boolean hasPlayer() {
        return result.hasPlayer();
      }
      public com.pokware.protobuf.Data.Player getPlayer() {
        return result.getPlayer();
      }
      public Builder setPlayer(com.pokware.protobuf.Data.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPlayer = true;
        result.player_ = value;
        return this;
      }
      public Builder setPlayer(com.pokware.protobuf.Data.Player.Builder builderForValue) {
        result.hasPlayer = true;
        result.player_ = builderForValue.build();
        return this;
      }
      public Builder mergePlayer(com.pokware.protobuf.Data.Player value) {
        if (result.hasPlayer() &&
            result.player_ != com.pokware.protobuf.Data.Player.getDefaultInstance()) {
          result.player_ =
            com.pokware.protobuf.Data.Player.newBuilder(result.player_).mergeFrom(value).buildPartial();
        } else {
          result.player_ = value;
        }
        result.hasPlayer = true;
        return this;
      }
      public Builder clearPlayer() {
        result.hasPlayer = false;
        result.player_ = com.pokware.protobuf.Data.Player.getDefaultInstance();
        return this;
      }
      
      // optional int32 stack = 3;
      public boolean hasStack() {
        return result.hasStack();
      }
      public int getStack() {
        return result.getStack();
      }
      public Builder setStack(int value) {
        result.hasStack = true;
        result.stack_ = value;
        return this;
      }
      public Builder clearStack() {
        result.hasStack = false;
        result.stack_ = 0;
        return this;
      }
      
      // optional int32 bet = 4;
      public boolean hasBet() {
        return result.hasBet();
      }
      public int getBet() {
        return result.getBet();
      }
      public Builder setBet(int value) {
        result.hasBet = true;
        result.bet_ = value;
        return this;
      }
      public Builder clearBet() {
        result.hasBet = false;
        result.bet_ = 0;
        return this;
      }
      
      // optional bool dealerFlag = 5;
      public boolean hasDealerFlag() {
        return result.hasDealerFlag();
      }
      public boolean getDealerFlag() {
        return result.getDealerFlag();
      }
      public Builder setDealerFlag(boolean value) {
        result.hasDealerFlag = true;
        result.dealerFlag_ = value;
        return this;
      }
      public Builder clearDealerFlag() {
        result.hasDealerFlag = false;
        result.dealerFlag_ = false;
        return this;
      }
      
      // optional bool smallBlindFlag = 6;
      public boolean hasSmallBlindFlag() {
        return result.hasSmallBlindFlag();
      }
      public boolean getSmallBlindFlag() {
        return result.getSmallBlindFlag();
      }
      public Builder setSmallBlindFlag(boolean value) {
        result.hasSmallBlindFlag = true;
        result.smallBlindFlag_ = value;
        return this;
      }
      public Builder clearSmallBlindFlag() {
        result.hasSmallBlindFlag = false;
        result.smallBlindFlag_ = false;
        return this;
      }
      
      // optional bool bigBlindFlag = 7;
      public boolean hasBigBlindFlag() {
        return result.hasBigBlindFlag();
      }
      public boolean getBigBlindFlag() {
        return result.getBigBlindFlag();
      }
      public Builder setBigBlindFlag(boolean value) {
        result.hasBigBlindFlag = true;
        result.bigBlindFlag_ = value;
        return this;
      }
      public Builder clearBigBlindFlag() {
        result.hasBigBlindFlag = false;
        result.bigBlindFlag_ = false;
        return this;
      }
      
      // optional bool waitingFlag = 8;
      public boolean hasWaitingFlag() {
        return result.hasWaitingFlag();
      }
      public boolean getWaitingFlag() {
        return result.getWaitingFlag();
      }
      public Builder setWaitingFlag(boolean value) {
        result.hasWaitingFlag = true;
        result.waitingFlag_ = value;
        return this;
      }
      public Builder clearWaitingFlag() {
        result.hasWaitingFlag = false;
        result.waitingFlag_ = false;
        return this;
      }
      
      // optional bool awayFlag = 9;
      public boolean hasAwayFlag() {
        return result.hasAwayFlag();
      }
      public boolean getAwayFlag() {
        return result.getAwayFlag();
      }
      public Builder setAwayFlag(boolean value) {
        result.hasAwayFlag = true;
        result.awayFlag_ = value;
        return this;
      }
      public Builder clearAwayFlag() {
        result.hasAwayFlag = false;
        result.awayFlag_ = false;
        return this;
      }
      
      // optional bool foldFlag = 10;
      public boolean hasFoldFlag() {
        return result.hasFoldFlag();
      }
      public boolean getFoldFlag() {
        return result.getFoldFlag();
      }
      public Builder setFoldFlag(boolean value) {
        result.hasFoldFlag = true;
        result.foldFlag_ = value;
        return this;
      }
      public Builder clearFoldFlag() {
        result.hasFoldFlag = false;
        result.foldFlag_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Seat)
    }
    
    static {
      defaultInstance = new Seat(true);
      com.pokware.protobuf.Data.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Seat)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Game_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Game_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Player_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TableStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TableStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Seat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Seat_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ndata.proto\"Q\n\004Game\022\020\n\010gameName\030\001 \002(\t\022\016" +
      "\n\006gameId\030\002 \002(\003\022\017\n\007players\030\003 \002(\005\022\n\n\002sb\030\004 " +
      "\002(\005\022\n\n\002bb\030\005 \002(\005\",\n\006Player\022\020\n\010playerId\030\001 " +
      "\002(\003\022\020\n\010userName\030\002 \002(\t\"\"\n\013TableStatus\022\023\n\004" +
      "seat\030\001 \003(\0132\005.Seat\"\305\001\n\004Seat\022\r\n\005index\030\001 \002(" +
      "\005\022\027\n\006player\030\002 \001(\0132\007.Player\022\r\n\005stack\030\003 \001(" +
      "\005\022\013\n\003bet\030\004 \001(\005\022\022\n\ndealerFlag\030\005 \001(\010\022\026\n\016sm" +
      "allBlindFlag\030\006 \001(\010\022\024\n\014bigBlindFlag\030\007 \001(\010" +
      "\022\023\n\013waitingFlag\030\010 \001(\010\022\020\n\010awayFlag\030\t \001(\010\022" +
      "\020\n\010foldFlag\030\n \001(\010B\034\n\024com.pokware.protobu",
      "fB\004Data"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Game_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Game_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Game_descriptor,
              new java.lang.String[] { "GameName", "GameId", "Players", "Sb", "Bb", },
              com.pokware.protobuf.Data.Game.class,
              com.pokware.protobuf.Data.Game.Builder.class);
          internal_static_Player_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Player_descriptor,
              new java.lang.String[] { "PlayerId", "UserName", },
              com.pokware.protobuf.Data.Player.class,
              com.pokware.protobuf.Data.Player.Builder.class);
          internal_static_TableStatus_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_TableStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TableStatus_descriptor,
              new java.lang.String[] { "Seat", },
              com.pokware.protobuf.Data.TableStatus.class,
              com.pokware.protobuf.Data.TableStatus.Builder.class);
          internal_static_Seat_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Seat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Seat_descriptor,
              new java.lang.String[] { "Index", "Player", "Stack", "Bet", "DealerFlag", "SmallBlindFlag", "BigBlindFlag", "WaitingFlag", "AwayFlag", "FoldFlag", },
              com.pokware.protobuf.Data.Seat.class,
              com.pokware.protobuf.Data.Seat.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
