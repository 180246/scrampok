/*
 * ConnectDialog.java
 *
 * Created on May 2, 2010, 9:41:19 PM
 */

package com.pokware.pokertester;

import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

import org.jdesktop.application.Action;

import com.pokware.client.netty.PokerClient;
import com.pokware.protobuf.Data.Game;

public class ConnectDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 1L;

	private PokerTesterApplicationView application;
	
	/** Creates new form ConnectDialog */
	public ConnectDialog(java.awt.Frame parent, PokerTesterApplicationView application) {
		super(parent, true);
		this.application = application;
		initComponents();
		
		String[] clientNameList = PokerTesterApplication.pokerClientManager.getClientNameList();
		activeSessionsComboBox.setModel(new DefaultComboBoxModel(clientNameList));
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                serverPanel = new javax.swing.JPanel();
                addressTextField = new javax.swing.JTextField();
                connectButton = new javax.swing.JButton();
                addressLabel = new javax.swing.JLabel();
                activeSessionsComboBox = new javax.swing.JComboBox();
                activeSessionsLabel = new javax.swing.JLabel();
                getGamesButton = new javax.swing.JButton();
                availableGamesScrollPane = new javax.swing.JScrollPane();
                availableGamesTable = new javax.swing.JTable();
                joinButton = new javax.swing.JButton();
                refreshButton = new javax.swing.JButton();
                userSelectedLabel = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                setName("Form"); // NOI18N

                org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.pokware.pokertester.PokerTesterApplication.class).getContext().getResourceMap(ConnectDialog.class);
                serverPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("serverPanel.border.title"))); // NOI18N
                serverPanel.setName("serverPanel"); // NOI18N

                addressTextField.setText(resourceMap.getString("addressTextField.text")); // NOI18N
                addressTextField.setName("addressTextField"); // NOI18N

                javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.pokware.pokertester.PokerTesterApplication.class).getContext().getActionMap(ConnectDialog.class, this);
                connectButton.setAction(actionMap.get("connectToServer")); // NOI18N
                connectButton.setText(resourceMap.getString("connectButton.text")); // NOI18N
                connectButton.setName("connectButton"); // NOI18N

                addressLabel.setText(resourceMap.getString("addressLabel.text")); // NOI18N
                addressLabel.setName("addressLabel"); // NOI18N

                activeSessionsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
                activeSessionsComboBox.setName("activeSessionsComboBox"); // NOI18N

                activeSessionsLabel.setText(resourceMap.getString("activeSessionsLabel.text")); // NOI18N
                activeSessionsLabel.setName("activeSessionsLabel"); // NOI18N

                getGamesButton.setText(resourceMap.getString("getGamesButton.text")); // NOI18N
                getGamesButton.setName("getGamesButton"); // NOI18N

                javax.swing.GroupLayout serverPanelLayout = new javax.swing.GroupLayout(serverPanel);
                serverPanel.setLayout(serverPanelLayout);
                serverPanelLayout.setHorizontalGroup(
                        serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serverPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(addressLabel)
                                        .addComponent(activeSessionsLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(activeSessionsComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 489, Short.MAX_VALUE)
                                        .addComponent(addressTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(connectButton)
                                        .addComponent(getGamesButton))
                                .addContainerGap())
                );
                serverPanelLayout.setVerticalGroup(
                        serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(serverPanelLayout.createSequentialGroup()
                                .addGroup(serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(connectButton)
                                        .addComponent(addressLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(serverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(activeSessionsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(activeSessionsLabel)
                                        .addComponent(getGamesButton))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                availableGamesScrollPane.setName("availableGamesScrollPane"); // NOI18N

                availableGamesTable.setAutoCreateRowSorter(true);
                availableGamesTable.setModel(defaultTableModel);
                availableGamesTable.setName("availableGamesTable"); // NOI18N
                availableGamesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                availableGamesTable.getTableHeader().setReorderingAllowed(false);
                availableGamesScrollPane.setViewportView(availableGamesTable);
                availableGamesTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

                joinButton.setAction(actionMap.get("joinSelectedTable")); // NOI18N
                joinButton.setText(resourceMap.getString("joinButton.text")); // NOI18N
                joinButton.setName("joinButton"); // NOI18N

                refreshButton.setText(resourceMap.getString("refreshButton.text")); // NOI18N
                refreshButton.setEnabled(false);
                refreshButton.setName("refreshButton"); // NOI18N

                userSelectedLabel.setText(resourceMap.getString("userSelectedLabel.text")); // NOI18N
                userSelectedLabel.setName("userSelectedLabel"); // NOI18N

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(availableGamesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
                                        .addComponent(serverPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(refreshButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(joinButton))
                                        .addComponent(userSelectedLabel))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(serverPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(userSelectedLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(availableGamesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(joinButton)
                                        .addComponent(refreshButton))
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

	@Action
	public void joinSelectedTable() {
		if(selectedPokerClient == null) {
			return;
		}
		this.setVisible(false);
		
		int selectedRow = availableGamesTable.getSelectedRow();
		Long gameId = (Long)availableGamesTable.getModel().getValueAt(selectedRow, 0);
		String tableName = (String)availableGamesTable.getModel().getValueAt(selectedRow, 1);
		
		GamePanel gamePanel = new GamePanel(selectedPokerClient, gameId);				
		application.getGamesTabbedPane().add(selectedPokerClient.getUsername()+"@"+tableName, gamePanel);
		
	}

	@Action
	public void connectToServer() {
		String loginPasswordAddress = addressTextField.getText();
		String[] split = loginPasswordAddress.split(":");
		String login = split[0];
		String password = split[1];
		
		try {
			PokerClient pokerClient = new PokerClient(login, password);			
			selectedPokerClient = pokerClient;			
			
			PokerTesterApplication.pokerClientManager.addPokerClient(pokerClient);
			activeSessionsComboBox.addItem(login);
			activeSessionsComboBox.setSelectedItem(login);
			
			connectButton.setEnabled(false);
			addressLabel.setEnabled(false);
			joinButton.setEnabled(true);			
			userSelectedLabel.setText("Logged as " + login);			
			defaultTableModel.getDataVector().clear();
			
			List<Game> gameList = pokerClient.listGames();
			for (Game game : gameList) {
				defaultTableModel.addRow(new Object[] { game.getGameId(), game.getGameName(), game.getSb() + "/" + game.getBb(), game.getPlayers() });
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private final DefaultTableModel defaultTableModel = new DefaultTableModel() {
		{
			addColumn("ID");
			addColumn("Table");
			addColumn("Blinds");
			addColumn("Players");
		}
	};

		private PokerClient selectedPokerClient = null;
	
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JComboBox activeSessionsComboBox;
        private javax.swing.JLabel activeSessionsLabel;
        private javax.swing.JLabel addressLabel;
        private javax.swing.JTextField addressTextField;
        private javax.swing.JScrollPane availableGamesScrollPane;
        private javax.swing.JTable availableGamesTable;
        private javax.swing.JButton connectButton;
        private javax.swing.JButton getGamesButton;
        private javax.swing.JButton joinButton;
        private javax.swing.JButton refreshButton;
        private javax.swing.JPanel serverPanel;
        private javax.swing.JLabel userSelectedLabel;
        // End of variables declaration//GEN-END:variables

}
